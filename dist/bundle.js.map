{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/coin.js","webpack:///./src/index.js","webpack:///./src/js/kitten.js","webpack:///./src/js/words.js","webpack:///./src/js/flag.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Coin","kittenPos","this","pos","animateCoin","draw","stopAnimation","img","Image","src","canvas","document","getElementById","ctx","getContext","loopCount","sx","sy","sw","sh","dx","dy","dw","dh","coin","drawImage","loopAnimation","drawCoin","test","requestAnimationFrame","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","checkLoop","startTime","time","score","isPlaying","currentWords","activeKittens","lives","releaseKittenInterval","totalChars","kittenImage","wordInput","querySelector","scoreDisplay","timeDisplay","numMatchesDisplay","livesDisplay","gameOver","finalScore","wpm","playAgainButton","gameStart","flag1","flag2","flag3","init","word","newKitten","randomWord","words","Kitten","push","window","timestamp","setInterval","releaseMoreKittens","animate","clearRect","length","currentCat","update","innerHTML","left","top","style","display","focus","addEventListener","handleMatch","e","keyCode","countdown","checkStatus","updateScore","updateReleaseKittenInterval","randomPosition","Math","floor","random","isGameOver","indexOf","wordScore","numMatches","matchInput","active","randomIndex","splice","playerStats","yourScore","min","freeze","clearInterval","location","reload","preventDefault","font","fillStyle","fillText","Flag","animateFlag","drawFlag","flag"],"mappings":"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AY,QAChBjG,EAAIiB,YAAc,UAClBjB,EAAIkB,WAAa,GACjBlB,EAAImB,cAAgB,EACpBnB,EAAIoB,cAAgB,EACpBpB,EAAIkG,SAAS7G,KAAK0D,KAAO1D,KAAKD,UAAU,GAAK,GAAMC,KAAKD,UAAU,GAAK,S,eAIhE+D,G,wFCvED,CACV,YACA,QACA,UACA,WACA,QACA,SACA,YACA,WACA,eACA,OACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,UACA,SACA,QACA,UACA,UACA,SACA,UACA,SACA,YACA,UACA,YACA,UACA,YACA,cACA,cACA,UACA,QACA,eACA,UACA,aACA,aACA,UACA,QACA,UACA,SACA,eACA,cACA,cACA,UACA,aACA,gBACA,aACA,aACA,OACA,WACA,eACA,UACA,SACA,SACA,SACA,YACA,UACA,OACA,UACA,OACA,OACA,OACA,YACA,WACA,YACA,SACA,UACA,eACA,YACA,cACA,OACA,SACA,YACA,eACA,SACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,aACA,QACA,WACA,UACA,aACA,aACA,QACA,WACA,UACA,SACA,UACA,YACA,YACA,YACA,QACA,aACA,YACA,QACA,QACA,SACA,QACA,UACA,YACA,WACA,cACA,YACA,SACA,QACA,WACA,QACA,cACA,YACA,OACA,QACA,SACA,QACA,QACA,eACA,SACA,eACA,aACA,SACA,SACA,WACA,UACA,SACA,QACA,UACA,OACA,SACA,UACA,SACA,QACA,SACA,WACA,WACA,UACA,cACA,OACA,QACA,SACA,UACA,SACA,aACA,WACA,UACA,SACA,SACA,a,2UCzJiBgD,E,WAEjB,WAAY/G,EAAWY,I,4FAAK,SACxBX,KAAKC,IAAMF,EACXC,KAAK+G,YAAc/G,KAAK+G,YAAYzH,KAAKU,MACzCA,KAAKG,KAAOH,KAAKG,KAAKb,KAAKU,MAC3BA,KAAKW,IAAMA,EAEXX,KAAKK,IAAM,IAAIC,MACfN,KAAKK,IAAIE,IAAM,qDAWfP,KAAKc,GAAK,GACVd,KAAKe,GAAK,IACVf,KAAKgB,GAAK,EACVhB,KAAKiB,GAAK,EAEVjB,KAAKkB,GAAKlB,KAAKC,IAAI,GACnBD,KAAKmB,GAAKnB,KAAKC,IAAI,GAEnBD,KAAKoB,GAAK,IACVpB,KAAKqB,GAAK,IAEVrB,KAAKgH,W,6CAMLhH,KAAKiH,KAAOjH,KAAKW,IAAIY,UAAUvB,KAAKK,IAAKL,KAAKc,GAAId,KAAKe,GAAIf,KAAKgB,GAAIhB,KAAKiB,GAAIjB,KAAKkB,GAAIlB,KAAKmB,GAAInB,KAAKoB,GAAIpB,KAAKqB,IACxGrB,KAAK0B,KAAOC,sBAAsB3B,KAAKG,Q,6BAiB5CH,KAAKgH,WACLhH,KAAK0B,KAAOC,sBAAsB3B,KAAKG,MAMvCH,KAAKW,IAAIiB,YAAc,UACvB5B,KAAKW,IAAIkB,WAAa,GACtB7B,KAAKW,IAAImB,cAAgB,EACzB9B,KAAKW,IAAIoB,cAAgB,I,oCAMzB/B,KAAKG,S,sCAILH,KAAKc,GAAK,EACVd,KAAKe,GAAK,EACVf,KAAKa,YACLb,KAAKgC,c,kCAIDhC,KAAKa,UAAY,IAEjBb,KAAKmB,IAAM,Q,eApFF2F","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\nexport default class Coin {\n\n    constructor(kittenPos) {\n       this.pos = kittenPos;\n       this.animateCoin = this.animateCoin.bind(this);\n       this.draw = this.draw.bind(this);\n       this.stopAnimation = false;\n    //    this.stopAnimation = this.stopAnimation.bind(this)\n    //    this.canvas = canvas;\n    //    this.ctx = ctx;\n\n       this.img = new Image();\n       this.img.src = \"https://game-seeds.s3.amazonaws.com/coin-sprite-sheet.png\";\n\n       const canvas = document.getElementById(\"canvas\");\n        this.ctx = canvas.getContext(\"2d\");\n        this.loopCount = 0;\n   \n        this.sx = 69;\n        this.sy = 60;\n        this.sw = 60;\n        this.sh = 60;\n      \n        this.dx = this.pos[0];\n        this.dy = this.pos[1];\n     \n        this.dw = 60;\n        this.dh = 60;\n        this.animateCoin();\n    \n    }\n\n    drawCoin() {\n        this.coin = this.ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.dx, this.dy, this.dw, this.dh);\n    } \n\n    draw() {\n        if (this.stopAnimation) {\n            return;\n        }\n        this.sx += this.dw;\n        \n\n        if (this.sx > 420) {\n            this.loopAnimation();\n            \n        }\n\n        this.drawCoin();\n        this.test = requestAnimationFrame(this.draw);\n  \n        //  ctx.font = \"16px Anton, sans-serif\";\n        // ctx.font = \"16px Jura, sans-serif\";\n        // ctx.font-family =\"UnifrakturCook, sans-serif\";\n        // ctx.font-size=\"16px\";\n        this.ctx.shadowColor = '#565656';\n        this.ctx.shadowBlur = 10;\n        this.ctx.shadowOffsetX = 2;\n        this.ctx.shadowOffsetY = 2;\n\n    }\n\n    animateCoin() {\n        this.draw();\n    }\n\n    loopAnimation() {\n        this.sx = 0;\n        this.sy = 0;\n        this.loopCount++;\n        this.checkLoop();\n    }\n\n    checkLoop() {\n        if (this.loopCount > 3) {\n            this.stopAnimation = true;\n            // this.dx -= 10;\n            // this.dy -= 50;\n          \n        };\n  \n    }\n}\n\n// image.src = \"https://game-seeds.s3.amazonaws.com/pirate-outline-height-130.png\"\n\n// drawCoin(ctx, coinSprite) {\n\n    // const pos = { pos: this.pos };\n    // Object.freeze(pos);\n\n    // const img = coinSprite;\n\n\n//     let sx = 0;\n//     let sy = 0;\n//     let sw = 60;\n//     let sh = 60;\n//     let dx = pos[\"pos\"][0];\n//     let dy = pos[\"pos\"][1];\n//     let dw = 60;\n//     let dh = 60;\n//     this.ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\n// }","import Kitten from \"./js/kitten\";\nimport words from \"./js/words\";\nimport Coin from \"./js/coin\";\nimport Flag from \"./js/flag\";\n\n\n\n\n\n\n// window.Image\n// Globals\n// modes\nlet startTime = 30;\nlet time = 30;\nlet score = 0;\nlet isPlaying = false;\nlet currentWords = [];\nlet activeKittens = [];\nlet flagPos = [];\nlet numMatches = 0;\nlet lives = 3;\nlet releaseKittenInterval = 2000;\nlet totalChars = 0;\n\n\n\n\nconst kittenImage = new Image();\nkittenImage.src = 'https://game-seeds.s3.amazonaws.com/pirate-outline-height-130.png';\n// kittenImage.src =\"https://game-seeds.s3.amazonaws.com/pirate-outline-height-130.png\";\n// kittenImage.src = 'https://game-seeds.s3.amazonaws.com/pirate-big-sit-outline.png';\nconst kittenPos = [0, 400];\n\nconst coinSprite = new Image();\ncoinSprite.src = \"https://game-seeds.s3.amazonaws.com/coin-sprite-sheet.png\";\n\n// DOM Elements\nconst canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext('2d');\nconst wordInput = document.querySelector('#word-input');\nconst scoreDisplay = document.querySelector('#score');\nconst timeDisplay = document.querySelector('#time');\nconst numMatchesDisplay = document.querySelector('#numMatches');\nconst livesDisplay = document.querySelector(\"#lives\");\nconst message = document.querySelector('#message');\nconst gameOver = document.querySelector('.gameover');\nconst finalScore = document.querySelector('#final-score');\nconst wpm = document.querySelector('#wpm');\nconst playAgainButton = document.querySelector('#play-again-button');\nconst gameStart = document.querySelector('.game-start');\nconst flag1 = document.querySelector('#flag1');\nconst flag2 = document.querySelector('#flag2');\nconst flag3 = document.querySelector('#flag3');\n\n\n\n// const c = document.getElementById('cheetah'); // DOM Manipulation (as opposed to canvas-- maybe come back to this)\n\n// Dictionary\n// const dictionary = currentMode;\n// const mode = {\n//     words: words,\n//     coding: coding,\n// };\n\n// const currentMode = mode.words;\n\n\n// Logic\n\n// window.addEventListener('load', init);\nwindow.addEventListener('load', startGame);\n\n\nfunction startGame() {\n    \n    // gameStart.style.display = \"flex\";\n\n\n\n   \n            window.addEventListener('keyup', function (e) {\n                if (e.keyCode === 32) {\n                    e.preventDefault();\n                    if (isPlaying === false) {\n                        gameStart.style.display = \"none\";\n                        isPlaying = true;\n                        wordInput.value = \"\";\n                        init();\n                    }\n                }\n            });\n        \n     \n    \n\n}\n\nfunction init() {\n    drawKitten();\n    // start  matching on word input\n    // isPlaying = true;\n    wordInput.focus();\n    wordInput.addEventListener('input', handleMatch);\n\n    wordInput.addEventListener('keypress', function(e) {\n        if (e.keyCode === 13) {\n            wordInput.value = \"\";\n        }\n    })\n    // onChange??\n    // Call countdown every second\n    setInterval(countdown, 1000);\n    // Check game status\n    setInterval(checkStatus, 50);\n    // setInterval(releaseMoreKittens, 2000);\n    setInterval(updateScore, 400);\n    setInterval(updateReleaseKittenInterval, 500);\n\nfunction drawKitten () {\n        \n        const word = randomWord(words);\n        const newKitten = new Kitten([0, 200], word, kittenImage, activeKittens, currentWords, ctx);\n\n        activeKittens.push(newKitten);\n        \n        window.requestAnimationFrame((timestamp) => {\n     \n            if (isPlaying) {\n \n\n                \n                setInterval(releaseMoreKittens, releaseKittenInterval);\n                animate(activeKittens);\n                \n            }\n\n\n\n        });\n    }\n\n \n}\n\nfunction releaseMoreKittens() {\n    \n    if (isPlaying) {\n        const word = randomWord();\n        const pos = randomPosition();\n        const newKitten = new Kitten(pos, word, kittenImage, activeKittens, currentWords, ctx);\n        activeKittens.push(newKitten);\n\n    }\n\n}\n\nfunction updateScore() {\n    \n    if (!isGameOver())  {\n        // score++;\n        scoreDisplay.innerHTML = score;\n    }\n  \n}\n\nfunction updateReleaseKittenInterval() {\n    \n    this.releaseKittenInterval -=200;\n    \n}\n\n\n\nfunction matchInput() {\n    \n    let value = wordInput.value;\n    if (currentWords.indexOf(value) > -1) {\n        let i = currentWords.indexOf(value);\n       \n        let wordScore = value.length * 100;\n        score += wordScore;\n        totalChars += (wordScore/100);\n        // scoreDisplay.innerHTML += wordScore;\n        numMatches++;\n        return true;\n    }\n}\n\nfunction handleMatch() {\n    let value = wordInput.value;\n    let i = currentWords.indexOf(value);\n    if (matchInput() && !isGameOver()) {\n        const pos = activeKittens[i].kittenPos;\n        // isPlaying = true;\n        numMatchesDisplay.innerHTML++;\n   \n        const coin = new Coin(pos);\n    \n        coin.animateCoin();\n        activeKittens[i].active = false;\n        activeKittens[i].update(i);\n  \n        wordInput.value = \"\";\n    }\n}\n\n\n// pick and show random  word \nfunction randomWord() {\n    // Generate random array index\n    const randomIndex = Math.floor(Math.random() * words.length);\n    // Save random word to a variable & push it into currentWords array\n    const word = words[randomIndex];\n    words.splice(randomIndex, 1);\n    currentWords.push(word);\n    // Output a randomword\n    return word;\n    \n\n}\n\n\nfunction randomPosition() {\n    \n    let randomPosition = Math.floor((Math.random() * 136) + 1);\n    randomPosition = 315 - randomPosition;\n    // console.log(randomPosition);\n    return [0, randomPosition];\n}\n\n\n// Countdown timer\nfunction countdown() {\n    // Make sure time is  not run out\n    if (time > 0) {\n        // decrement time\n        time--;\n    } else if (time === 0) {\n        isPlaying = false;\n    }\n    // Show time\n    timeDisplay.innerHTML = time;\n}\n\n// Check game status\n\nfunction isGameOver() {\n    if (time === 0 || lives < 1) {\n        // isPlaying = false;\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction checkStatus() {\n    if (isGameOver() && isPlaying) {\n        \n        isPlaying = false;\n        const playerStats = {\n            yourScore: score,\n            totalChars: totalChars,\n            min: time/60,\n            \n            wpm: Math.floor((totalChars/5) / ((startTime-time)/60)),\n        };\n        debugger\n        Object.freeze(playerStats);\n        clearInterval(init);\n\n        gameOver.style.display = \"flex\";\n\n        finalScore.innerHTML = playerStats.yourScore;\n\n        wpm.innerHTML = playerStats.wpm;\n        // message.innerHTML = 'Game Over!';\n        playAgainButton.addEventListener('click', ()=> {\n            location.reload();\n        });\n\n   \n        document.addEventListener('keyup', function(e){\n            if (e.keyCode === 32) {\n                window.location.reload();\n            }\n        });\n\n\n        // score = 0;\n        // scoreDisplay.innerHTML = 0;\n    }\n}\n\n// updateFlag(lives, pos, left, top) {\n\n// }\n\nfunction animate(activeKittens) {\n    ctx.clearRect(0, 0, 1024, 450);\n    \n    for (let i = 0; i < activeKittens.length; i++) {\n        const currentCat = activeKittens[i];\n        \n        if (currentCat.update()) {\n            i--;\n           \n            livesDisplay.innerHTML--;\n            const pos = currentCat.kittenPos;\n            const left = pos[0] + 260;\n            const top = pos[1];\n\n\n            if (lives === 3) {\n                flag1.style.left = `${left}` + \"px\";\n                flag1.style.top = `${top + \"px\"}`;\n                flag1.style.display = \"inline\";\n            } else if (lives === 2) {\n                flag2.style.left = `${left}` + \"px\";\n                flag2.style.top = `${top + \"px\"}`;\n                flag2.style.display = \"inline\";\n            } else if (lives===1) {\n                flag3.style.left = `${left}` + \"px\";\n                flag3.style.top = `${top + \"px\"}`;\n                flag3.style.display = \"inline\";\n            }\n            \n            lives--;\n            // const flag = new Flag(pos, ctx);\n            // flag.draw();\n            // debugger\n            // const coin = new Coin(pos);\n            // coin.animateCoin();\n           \n            // flag.style.display=\"inline\";\n            // flag.style.cy = `${pos[1] - 138}`;\n            // flag.style.cx =`${pos[0] - 130}`;\n            \n           \n            \n          \n           \n            // flag.style.left=`${left}`+\"px\";\n            // flag.style.top =`${top + \"px\"}`;\n            // flag.style.display = \"inline\";\n            \n     \n\n        }\n        currentCat.draw(ctx);\n        \n    }\n\n\n\n\n\n\n    // if (kittenPos[0] < 800 ) {\n    // c.style.transform =`translate(${kittenPos[0]}px, 0px)`\n    // document.getElementById('cheetah');\n    // DOM Manipulation (as opposed to canvas-- maybe come back to this if you comment 'c' back in above)\n    window.requestAnimationFrame((timestamp) => {\n\n        animate(activeKittens);\n    });\n    // }\n\n}\n// kittenImage.onload = function () {\n//     debugger\n//     const word = randomWord(words);\n//     const newKitten = new Kitten([0, 200], word, kittenImage, activeKittens, currentWords, ctx);\n\n//     activeKittens.push(newKitten);\n//     window.requestAnimationFrame((timestamp) => {\n//         debugger\n//         if (isPlaying) {\n//             setInterval(releaseMoreKittens, releaseKittenInterval);\n//             animate(activeKittens);\n//         }\n      \n\n\n//     });\n// }\n\n\n// OLD CODE /////////\n\n\n     \n//      import Kitten from \"./js/kitten\";\n//      import words from \"./js/words\";\n    \n     \n//      window.addEventListener('load', init);\n//      window.Image\n//      // Globals\n//      // modes\n\n//      let time = 30;\n//      let score = 0;\n//      let isPlaying;\n//      let currentWords = [];\n//      let activeKittens = [];\n\n\n//      const kittenImage = new Image();\n// kittenImage.src ='https://game-seeds.s3.amazonaws.com/pirate-outline-height-150.png';\n//     // kittenImage.src =\"https://game-seeds.s3.amazonaws.com/pirate-outline-height-130.png\";\n//     // kittenImage.src = 'https://game-seeds.s3.amazonaws.com/pirate-big-sit-outline.png';\n//      const kittenPos = [0, 400];\n\n//      // DOM Elements\n//      const canvas = document.getElementById('canvas');\n//      const ctx = canvas.getContext('2d');\n//      const wordInput = document.querySelector('#word-input');\n//      const scoreDisplay = document.querySelector('#score');\n//      const timeDisplay = document.querySelector('#time');\n//      const message = document.querySelector('#message');\n//      const gameOver = document.querySelector('.gameover');\n//      const finalScore = document.querySelector('#final-score');\n//      const wpm = document.querySelector('#wpm');\n\n\n//      // const c = document.getElementById('cheetah'); // DOM Manipulation (as opposed to canvas-- maybe come back to this)\n\n//      // Dictionary\n//     // const dictionary = currentMode;\n//     // const mode = {\n//     //     words: words,\n//     //     coding: coding,\n//     // };\n\n//     // const currentMode = mode.words;\n\n\n//      // Logic\n\n//      // Initialize Game\n//      function init() {\n//          // start  matching on word input\n//          wordInput.addEventListener('input', handleMatch);\n//          // onChange??\n//          // Call countdown every second\n//          setInterval(countdown, 1000);\n//          // Check game status\n//          setInterval(checkStatus, 50);\n//          // setInterval(releaseMoreKittens, 2000);\n//      }\n\n//      function releaseMoreKittens() {\n//          const word = randomWord();\n//          const pos = randomPosition();\n//          const newKitten = new Kitten(pos, word, kittenImage, activeKittens, currentWords, ctx);\n//          activeKittens.push(newKitten);\n        \n//          // window.requestAnimationFrame(() => animate(newKitten))\n//          // window.requestAnimationFrame(() => animate(newKitten));\n\n//      }\n\n\n\n//      function matchInput() {\n//          let value = wordInput.value;\n//          if (currentWords.indexOf(value) > -1) {\n//              let i = currentWords.indexOf(value);\n//              score ++;\n//              scoreDisplay.innerHTML++; \n//              return true;\n//          }\n//      }\n\n//      function handleMatch() {\n//          let value = wordInput.value;\n//          let i = currentWords.indexOf(value);\n//          if (matchInput()) {\n//              isPlaying = true;\n//              activeKittens[i].active = false;\n//              activeKittens[i].update(i);\n//              wordInput.value = \"\";\n//          }\n//      }\n\n\n//      // pick and show random  word \n//      function randomWord() {\n//          // Generate random array index\n//          const randomIndex = Math.floor(Math.random() * words.length);\n//          // Save random word to a variable & push it into currentWords array\n//         const word = words[randomIndex];\n//         words.splice(randomIndex, 1);\n//          currentWords.push(word);\n//          // Output a randomword\n//          return word;\n\n//      }\n \n\n//      function randomPosition() {\n//          let randomPosition = Math.floor((Math.random() * 136) + 1);\n//          randomPosition = 400-randomPosition;\n//          console.log(randomPosition);\n//          return [0, randomPosition];\n//      }\n\n//      // Countdown timer\n//      function countdown() {\n//          // Make sure time is  not run out\n//          if (time > 0) {\n//              // decrement time\n//              time--;\n//          } else if (time === 0) {\n//              isPlaying = false;\n//          }\n//          // Show time\n//          timeDisplay.innerHTML = time;\n//      }\n\n//      // Check game status\n//      function checkStatus() {\n//          if (!isPlaying && time === 0) {\n//              const playerStats = {\n//                  yourScore: score,\n//                  wpm: Math.floor(score * 2),\n//              };\n//              Object.freeze(playerStats);\n//              clearInterval(init);\n            \n//              gameOver.style.display = \"flex\";\n           \n//              finalScore.innerHTML = playerStats.yourScore;\n         \n//              wpm.innerHTML = playerStats.wpm;\n//              message.innerHTML = 'Game Over!';\n            \n\n//              score = 0;\n//              scoreDisplay.innerHTML=0;\n//          }\n//      }\n\n\n//      function animate(activeKittens) {\n//          ctx.clearRect(0, 0, 800, 600);\n       \n//          for (let i = 0; i < activeKittens.length; i++) {\n//              const currentCat = activeKittens[i];\n//              if (currentCat.update()) i--;\n//              currentCat.draw(ctx);\n//          }\n\n\n\n\n\n\n//          // if (kittenPos[0] < 800 ) {\n//          // c.style.transform =`translate(${kittenPos[0]}px, 0px)`\n//          // document.getElementById('cheetah');\n//          // DOM Manipulation (as opposed to canvas-- maybe come back to this if you comment 'c' back in above)\n//          window.requestAnimationFrame((timestamp) => {\n             \n//              animate(activeKittens);\n//          });\n//          // }\n\n//      }\n//      kittenImage.onload = function () {\n//          const word = randomWord(words);\n//          const newKitten = new Kitten([0, 400], word, kittenImage, activeKittens, currentWords, ctx);\n        \n//          activeKittens.push(newKitten);\n//          window.requestAnimationFrame((timestamp) => {\n//              setInterval(releaseMoreKittens, 2000);\n//              animate(activeKittens);\n           \n\n//          });\n//      }\n\n\n","import Coin from \"./coin\";\n\n// let lives = 3;\n// const livesDisplay = document.querySelector('#lives');\n\nclass Kitten {\n    constructor(kittenPos, word, kittenImage, activeKittens = [], currentWords = [], ctx, lives) {\n        this.kittenPos = kittenPos;\n        this.word = word;\n        this.kittenImage = kittenImage;\n        this.activeKittens = activeKittens;\n        this.currentWords = currentWords;\n        this.active = true;\n        this.ctx = ctx;\n        this.lives = lives;\n    }\n\n    update(i) {\n\n        // if (this.active === false) {\n\n        //     this.kittenPos[0] = 9000;\n        // //    this.fly();\n          \n        //     return false;\n          \n\n        // }\n\n        this.kittenPos[0] += 1;\n    \n        if (this.kittenPos[0] > 800 || this.active === false) {\n            let i = this.activeKittens.indexOf(this);\n            this.activeKittens.splice(i, 1);\n            this.currentWords.splice(i, 1);\n          \n            return true;\n        }\n        return false;\n    }\n\n\n    // hideKittenImage() {\n    //     let image = this.kittenImage = new Image();\n    //     this.kittenImage.src = \"https://game-seeds.s3.amazonaws.com/pirate-outline-height-130.png\"\n    // }\n\n    fly() {\n        this.kittenPos[0] -= 5;\n        this.kittenPos[1] -= 5;\n    }\n\n  \n\n    draw(ctx) {\n        // debugger\n        ctx.drawImage(this.kittenImage, ...this.kittenPos);\n        ctx.font = \"13px Poppins, sans-serif\";\n        //  ctx.font = \"16px Anton, sans-serif\";\n        // ctx.font = \"16px Jura, sans-serif\";\n        // ctx.font-family =\"UnifrakturCook, sans-serif\";\n        // ctx.font-size=\"16px\";\n        ctx.fillStyle = \"white\";\n        ctx.shadowColor = '#565656';\n        ctx.shadowBlur = 10;\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 2;\n        ctx.fillText(this.word, (this.kittenPos[0] + 20), (this.kittenPos[1] + 119));\n    }\n}\n\nexport default Kitten;\n\n\n// OLD\n\n// class Kitten {\n//     constructor(kittenPos, word, kittenImage, activeKittens=[], currentWords=[]) {\n//         this.kittenPos = kittenPos;\n//         this.word = word;\n//         this.kittenImage = kittenImage;\n//         this.activeKittens = activeKittens;\n//         this.currentWords = currentWords;\n//         this.active = true;\n//     }\n\n//     update(i) {\n\n//         this.kittenPos[0] += 1.5;\n//         if (this.active === false) {\n//             this.fly();\n//             // this.activeKittens.splice(i, 1);\n            \n//         }\n//         if (this.kittenPos[0] > 800) {\n//             let i = this.activeKittens.indexOf(this);\n//             this.activeKittens.splice(i, 1);\n//             this.currentWords.splice(i, 1);\n//             return true;\n//         }\n//         return false;\n//     }\n\n//     fly() {\n//         this.kittenPos[0] -= 5;\n//         this.kittenPos[1] -= 5;\n//     }\n\n//     draw(ctx) {\n//         // debugger\n//         ctx.drawImage(this.kittenImage, ...this.kittenPos);\n//         ctx.font = \"15px Poppins, sans-serif\";\n//         //  ctx.font = \"16px Anton, sans-serif\";\n//         // ctx.font = \"16px Jura, sans-serif\";\n//         // ctx.font-family =\"UnifrakturCook, sans-serif\";\n//         // ctx.font-size=\"16px\";\n//         ctx.fillStyle = \"white\";\n//         ctx.shadowColor = '#565656';\n//         ctx.shadowBlur = 10;\n//         ctx.shadowOffsetX = 3;\n//         ctx.shadowOffsetY = 3;\n//         ctx.fillText(this.word, (this.kittenPos[0] + 20), (this.kittenPos[1] + 143));\n//     }\n// }\n\n// export default Kitten;","const words = [\n    'bubblegum',\n    'river',\n    'popcorn',\n    'revolver',\n    'magic',\n    'potato',\n    'blockhead',\n    'loophole',\n    'ambidextrous',\n    'fish',\n    'nineteen',\n    'clover',\n    'beeswax',\n    'cereal',\n    'chameleon',\n    'lightbulb',\n    'gibberish',\n    'serpent',\n    'gamble',\n    'bunny',\n    'doorman',\n    'amateur',\n    'jigsaw',\n    'cultish',\n    'bamboo',\n    'bumblebee',\n    'pumpkin',\n    'harmonica',\n    'haircut',\n    'jellyfish',\n    'quarrelsome',\n    'fax machine',\n    'fairies',\n    'rhyme',\n    'embarrassing',\n    'pajamas',\n    'duffel bag',\n    'overpriced',\n    'ketchup',\n    'koala',\n    'panther',\n    'flower',\n    'squishmallow',\n    'synesthesia',\n    'tempestuous',\n    'falafel',\n    'pedestrian',\n    'dennis rodman',\n    'basketball',\n    'rainforest',\n    'meow',\n    'dentures',\n    'helen keller',\n    'persian',\n    'kitten',\n    'pirate',\n    'eggnog',\n    'facetious',\n    'lettuce',\n    'mate',\n    'pancake',\n    'fork',\n    'soup',\n    'wine',\n    'wolverine',\n    'lovebird',\n    'shoe lace',\n    'drawer',\n    'peanuts',\n    'fake flowers',\n    'chocolate',\n    'credit card',\n    'sofa',\n    'sarong',\n    'tracksuit',\n    'juicy jacket',\n    'poncho',\n    'tankini',\n    'sunroof',\n    'sundress',\n    'bambi',\n    'cocoa',\n    'butter',\n    'carousel',\n    'stargazing',\n    'honey',\n    'marinade',\n    'fossils',\n    'somersault',\n    'trampoline',\n    'libra',\n    'aquarius',\n    'rainbow',\n    'gemini',\n    'scorpio',\n    'capricorn',\n    'book fair',\n    'hopskotch',\n    'sugar',\n    'blacklight',\n    'sugarfree',\n    'pluto',\n    'froth',\n    'tulips',\n    'sandy',\n    'bunkbed',\n    'chinatown',\n    'tortilla',\n    'parking lot',\n    'baby blue',\n    'racoon',\n    'valet',\n    'princess',\n    'peach',\n    'televisions',\n    'christmas',\n    'goth',\n    'cameo',\n    'forgot',\n    'angel',\n    'cacti',\n    'fire hydrant',\n    'shadow',\n    'dry cleaning',\n    'fingertips',\n    'cocoon',\n    'soccer',\n    'cassette',\n    'matador',\n    'jungle',\n    'tiger',\n    'darling',\n    'wink',\n    'smiles',\n    'monsoon',\n    'cowboy',\n    'shark',\n    'safari',\n    'moroccan',\n    'lemonade',\n    'limeade',\n    'mockingbird',\n    'luna',\n    'suave',\n    'madame',\n    'jet ski',\n    'speedo',\n    'matzo ball',\n    'lollipop',\n    'spanish',\n    'french',\n    'pebble',\n    'name tag'\n];\n\nexport default words;","export default class Flag {\n\n    constructor(kittenPos, ctx) {\n        this.pos = kittenPos;\n        this.animateFlag = this.animateFlag.bind(this);\n        this.draw = this.draw.bind(this);\n        this.ctx = ctx;\n   \n        this.img = new Image();\n        this.img.src = \"https://game-seeds.s3.amazonaws.com/1-treasure.png\";\n\n        // this.img.onload = function () {\n        //     debugger\n        //     this.ctx.drawImage(this.img, this.pos[0], this.pos[1]);\n        // };\n        \n        // const canvas = document.getElementById(\"canvas\");\n     \n        // this.loopCount = 0;\n\n        this.sx = 69;\n        this.sy = 130;\n        this.sw = 0;\n        this.sh = 0;\n\n        this.dx = this.pos[0];\n        this.dy = this.pos[1];\n\n        this.dw = 100;\n        this.dh = 100;\n        \n        this.drawFlag();\n\n    }\n\n    drawFlag() {\n        \n        this.flag = this.ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.dx, this.dy, this.dw, this.dh);\n             this.test = requestAnimationFrame(this.draw);\n        debugger\n    }\n\n    draw() {\n        debugger\n        // this.ctx.drawImage(this.img, this.pos[0], this.pos[1]);\n        // this.ctx.drawImage(this.img, ...this.pos)\n        // debugger\n        // this.sx += this.dw;\n\n\n        // // if (this.sx > 420) {\n        // //     this.loopAnimation();\n\n        // // }\n\n        this.drawFlag();\n        this.test = requestAnimationFrame(this.draw);\n\n        //  ctx.font = \"16px Anton, sans-serif\";\n        // ctx.font = \"16px Jura, sans-serif\";\n        // ctx.font-family =\"UnifrakturCook, sans-serif\";\n        // ctx.font-size=\"16px\";\n        this.ctx.shadowColor = '#565656';\n        this.ctx.shadowBlur = 10;\n        this.ctx.shadowOffsetX = 2;\n        this.ctx.shadowOffsetY = 2;\n\n    }\n\n    animateFlag() {\n        debugger\n        this.draw();\n    }\n\n    loopAnimation() {\n        this.sx = 0;\n        this.sy = 0;\n        this.loopCount++;\n        this.checkLoop();\n    }\n\n    checkLoop() {\n        if (this.loopCount > 2) {\n            // this.dx -= 10;\n            this.dy -= 50;\n\n        };\n\n    }\n}"],"sourceRoot":""}